{"ast":null,"code":"var _jsxFileName = \"c:\\\\Desktop\\\\my_projects\\\\todo_app\\\\src\\\\todo.tsx\";\nimport React, { useState } from 'react';\nimport './App.css';\n\nconst DisplayInfo = ({\n  todoText,\n  index,\n  completeTodo,\n  removeTodo\n}) => {\n  // if (todoText.text=='') return ''\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo\",\n    style: {\n      textDecoration: todoText.isCompleted ? 'line-through' : ''\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    onClick: () => completeTodo(index),\n    style: {\n      cursor: 'alias'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, \" \", todoText.text)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => removeTodo(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"delete\"));\n};\n\nconst TodoInput = ({\n  addTodo\n}) => {\n  const [val, setVal] = useState('');\n  console.log(val);\n\n  const submitForm = e => {\n    console.log(\"submitForm called\");\n    e.preventDefault();\n    if (!val) return;\n    addTodo(val);\n    console.log(val);\n    setVal('');\n  };\n\n  return (\n    /*#__PURE__*/\n    // <form>\n    React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"add toDo...\",\n      className: \"input\",\n      value: val,\n      onChange: e => setVal(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, \"Add\"))\n  );\n};\n\n// const Count: React.FC<counter> =({todos,fn})=>{\n//     const totalTask=0;\n//     const taskCompleted = 0\n//     const keys = Object.keys(todos)\n//     for (const key of keys) {\n//         if keys.isCompleted == \n//       }\n// }\nexport const Todo = () => {\n  let savedItems = localStorage.getItem('todos');\n  savedItems = JSON.parse(savedItems);\n  let dummy = [{\n    text: '',\n    isCompleted: false\n  }];\n  const [todos, setTodos] = useState(savedItems || dummy);\n  console.log(todos);\n\n  const addTodo = text => {\n    let newTodos = [...todos, {\n      text: text,\n      isCompleted: false\n    }];\n\n    if (newTodos[0].text == '') {\n      newTodos.splice(0, 1);\n    }\n\n    setTodos(newTodos);\n    localStorage.setItem('todos', JSON.stringify(newTodos));\n  };\n\n  const completeTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = !newTodos[index].isCompleted;\n    setTodos(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, todos.map((todo, index) => /*#__PURE__*/React.createElement(DisplayInfo, {\n    index: index,\n    todoText: todo,\n    completeTodo: completeTodo,\n    removeTodo: removeTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(TodoInput, {\n    addTodo: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"sources":["c:/Desktop/my_projects/todo_app/src/todo.tsx"],"names":["React","useState","DisplayInfo","todoText","index","completeTodo","removeTodo","textDecoration","isCompleted","cursor","text","TodoInput","addTodo","val","setVal","console","log","submitForm","e","preventDefault","target","value","Todo","savedItems","localStorage","getItem","JSON","parse","dummy","todos","setTodos","newTodos","splice","setItem","stringify","map","todo"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css'\r\n\r\n\r\ninterface todos {\r\n    \r\n    todoText:any;\r\n    index:any\r\n    completeTodo:(index:number)=>void;\r\n    removeTodo:(index:number)=>void;\r\n}\r\n\r\nconst DisplayInfo: React.FC<todos> = ({todoText, index,completeTodo,removeTodo})=>{\r\n    // if (todoText.text=='') return ''\r\n    return(\r\n        <div className=\"todo\" style={{textDecoration:todoText.isCompleted ? 'line-through':''}} >\r\n\r\n            \r\n                <ul onClick={()=>completeTodo(index)} style={{cursor:'alias'}}>\r\n                    <li> {todoText.text}</li>\r\n                </ul>\r\n                <button onClick={()=>removeTodo(index)}>\r\n                    delete\r\n                </button>\r\n\r\n           \r\n        </div>\r\n\r\n    )\r\n\r\n\r\n}\r\ninterface addT{\r\n    addTodo :(val:string)=>void;\r\n}\r\n\r\nconst TodoInput: React.FC<addT>= ({addTodo})=> {\r\n    const [val,setVal] = useState('');\r\n    console.log(val);\r\n    const submitForm = (e:any) => {\r\n        console.log(\"submitForm called\")\r\n        e.preventDefault();\r\n        if (!val) return;\r\n        addTodo(val);\r\n        console.log(val);\r\n        setVal('');\r\n        \r\n    }\r\n    return(\r\n        // <form>\r\n\r\n        <form>\r\n            <input type=\"text\" placeholder=\"add toDo...\" className=\"input\" value={val} onChange={e => setVal(e.target.value)} />\r\n            <button onClick={submitForm}>Add</button>\r\n        </form>\r\n    )   \r\n}    \r\n\r\ninterface counter{\r\n    todos:any;\r\n    fn:(todos:any)=>void \r\n}\r\n// const Count: React.FC<counter> =({todos,fn})=>{\r\n//     const totalTask=0;\r\n//     const taskCompleted = 0\r\n//     const keys = Object.keys(todos)\r\n//     for (const key of keys) {\r\n//         if keys.isCompleted == \r\n//       }\r\n    \r\n// }\r\n\r\n\r\nexport const Todo: React.FC =()=>{\r\nlet savedItems:any = localStorage.getItem('todos');\r\nsavedItems = JSON.parse(savedItems);\r\nlet dummy:any =[{text:'',isCompleted:false}]\r\nconst [todos, setTodos] = useState<any>(savedItems||dummy)\r\nconsole.log(todos);\r\n\r\nconst addTodo= (text:string)=> {\r\n    \r\n    let newTodos = [...todos,{ text:text,isCompleted:false }]\r\n    if (newTodos[0].text ==''){\r\n        newTodos.splice(0,1);\r\n        \r\n    }\r\n    setTodos(newTodos);\r\n    localStorage.setItem('todos', JSON.stringify(newTodos));\r\n}\r\n\r\n\r\nconst completeTodo = (index:number) =>{\r\n    const newTodos = [...todos]\r\n    newTodos[index].isCompleted = !newTodos[index].isCompleted;\r\n    setTodos(newTodos);\r\n}\r\n\r\nconst removeTodo = (index:number)=>{\r\n    const newTodos = [...todos]\r\n    newTodos.splice(index,1)\r\n    setTodos(newTodos);\r\n}\r\n\r\nreturn(\r\n    <div className='todo-list'>\r\n        {todos.map((todo:any,index:number)=>(\r\n            <DisplayInfo  index={index} todoText={todo} completeTodo={completeTodo} removeTodo={removeTodo}/>\r\n            \r\n        ))}\r\n        {/* <Enumerate /> */}\r\n        <TodoInput addTodo={addTodo}/>\r\n    </div>\r\n        \r\n\r\n\r\n)\r\n\r\n}"]},"metadata":{},"sourceType":"module"}