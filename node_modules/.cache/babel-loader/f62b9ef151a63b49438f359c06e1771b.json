{"ast":null,"code":"var _jsxFileName = \"c:\\\\Desktop\\\\my_projects\\\\todo_app\\\\src\\\\todo.tsx\";\nimport React, { useState } from 'react';\nimport './App.css';\n\nconst DisplayInfo = ({\n  todoText,\n  index\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, todoText.text);\n};\n\nconst TodoInput = ({\n  addTodo\n}) => {\n  const [val, setVal] = useState('');\n  console.log(val);\n\n  const submitForm = e => {\n    console.log(\"submitForm called\");\n    e.preventDefault();\n    if (!val) return;\n    addTodo(val);\n    console.log(val);\n    setVal('');\n  };\n\n  return (\n    /*#__PURE__*/\n    // <form>\n    React.createElement(\"form\", {\n      onSubmit: submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"input\",\n      value: val,\n      onChange: e => setVal(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }))\n  );\n};\n\nconst Enumerate = todos => {\n  if (!todos) {\n    return;\n  } else {\n    {\n      todos.map((todo, index) => /*#__PURE__*/React.createElement(DisplayInfo, {\n        index: index,\n        todoText: todo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }));\n    }\n  }\n};\n\nexport const Todo = () => {\n  const [todos, setTodos] = useState();\n\n  const addTodo = text => {\n    console.log(\"=======================>\");\n    const newTodos = [...todos, {\n      text: \"hhg\",\n      isCompleted: false\n    }];\n    setTodos(newTodos); // setTodos([...todos,{text:text,isCompleted:false }])\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Enumerate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TodoInput, {\n    addTodo: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"sources":["c:/Desktop/my_projects/todo_app/src/todo.tsx"],"names":["React","useState","DisplayInfo","todoText","index","text","TodoInput","addTodo","val","setVal","console","log","submitForm","e","preventDefault","target","value","Enumerate","todos","map","todo","Todo","setTodos","newTodos","isCompleted"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;;AASA,MAAMC,WAA4B,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAAqB;AACtD,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKD,QAAQ,CAACE,IAFd,CADJ;AASH,CAVD;;AAeA,MAAMC,SAAyB,GAAE,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAC3C,QAAM,CAACC,GAAD,EAAKC,MAAL,IAAeR,QAAQ,CAAC,EAAD,CAA7B;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;;AACA,QAAMI,UAAU,GAAIC,CAAD,IAAW;AAC1BH,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAE,IAAAA,CAAC,CAACC,cAAF;AACA,QAAI,CAACN,GAAL,EAAU;AACVD,IAAAA,OAAO,CAACC,GAAD,CAAP;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAC,IAAAA,MAAM,CAAC,EAAD,CAAN;AAEH,GARD;;AASA;AAAA;AACI;AAEA;AAAM,MAAA,QAAQ,EAAEG,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,OAA7B;AAAqC,MAAA,KAAK,EAAEJ,GAA5C;AAAiD,MAAA,QAAQ,EAAEK,CAAC,IAAIJ,MAAM,CAACI,CAAC,CAACE,MAAF,CAASC,KAAV,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAHJ;AAQH,CApBD;;AAuBA,MAAMC,SAAS,GAAGC,KAAD,IAAa;AAC1B,MAAI,CAACA,KAAL,EAAY;AACR;AACD,GAFH,MAES;AACL;AACIA,MAAAA,KAAK,CAACC,GAAN,CAAU,CAACC,IAAD,EAAUhB,KAAV,kBACV,oBAAC,WAAD;AAAc,QAAA,KAAK,EAAEA,KAArB;AAA4B,QAAA,QAAQ,EAAEgB,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AAGD;AACJ;AACN,CAVD;;AAYA,OAAO,MAAMC,IAAc,GAAE,MAAI;AACjC,QAAM,CAACH,KAAD,EAAQI,QAAR,IAAoBrB,QAAQ,EAAlC;;AAEA,QAAMM,OAAO,GAAGF,IAAD,IAAgB;AAC3BK,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA,UAAMY,QAAQ,GAAG,CAAC,GAAGL,KAAJ,EAAU;AAAEb,MAAAA,IAAI,EAAC,KAAP;AAAamB,MAAAA,WAAW,EAAC;AAAzB,KAAV,CAAjB;AACAF,IAAAA,QAAQ,CAACC,QAAD,CAAR,CAH2B,CAI3B;AACH,GALD;;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAMI,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEhB,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ;AAcC,CA1BM","sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css'\r\n\r\ninterface todos {\r\n    \r\n    todoText:any;\r\n    index:any\r\n\r\n}\r\n\r\nconst DisplayInfo: React.FC<todos> = ({todoText, index})=>{\r\n    return(\r\n        <div className=\"todo\">\r\n\r\n            {todoText.text}\r\n        </div>\r\n\r\n    )\r\n\r\n\r\n}\r\ninterface addT{\r\n    addTodo :(val:string)=>void;\r\n}\r\n\r\nconst TodoInput: React.FC<addT>= ({addTodo})=> {\r\n    const [val,setVal] = useState('');\r\n    console.log(val);\r\n    const submitForm = (e:any) => {\r\n        console.log(\"submitForm called\")\r\n        e.preventDefault();\r\n        if (!val) return;\r\n        addTodo(val);\r\n        console.log(val);\r\n        setVal('');\r\n        \r\n    }\r\n    return(\r\n        // <form>\r\n\r\n        <form onSubmit={submitForm}>\r\n            <input type=\"text\" className=\"input\" value={val} onChange={e => setVal(e.target.value)} />\r\n            {/* <button onClick={submitForm}>click</button> */}\r\n        </form>\r\n    )   \r\n}    \r\n\r\n\r\nconst Enumerate =(todos:any)=>{\r\n    if (!todos) {\r\n        return\r\n      } else {\r\n        {\r\n            todos.map((todo:any,index:number)=>(\r\n            <DisplayInfo  index={index} todoText={todo} />\r\n            \r\n        ))}\r\n      }\r\n}\r\n\r\nexport const Todo: React.FC =()=>{\r\nconst [todos, setTodos] = useState<any>()\r\n\r\nconst addTodo= (text:string)=> {\r\n    console.log(\"=======================>\")\r\n    const newTodos = [...todos,{ text:\"hhg\",isCompleted:false }]\r\n    setTodos(newTodos);\r\n    // setTodos([...todos,{text:text,isCompleted:false }])\r\n}\r\n\r\n\r\n\r\nreturn(\r\n    <div className='todo-list'>\r\n        {/* {todos.map((todo:any,index:number)=>(\r\n            <DisplayInfo  index={index} todoText={todo} />\r\n            \r\n        ))} */}\r\n        <Enumerate />\r\n        <TodoInput addTodo={addTodo}/>\r\n    </div>\r\n        \r\n\r\n\r\n)\r\n\r\n}"]},"metadata":{},"sourceType":"module"}