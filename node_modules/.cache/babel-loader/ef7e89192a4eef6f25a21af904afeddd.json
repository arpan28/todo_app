{"ast":null,"code":"var _jsxFileName = \"c:\\\\Desktop\\\\my_projects\\\\todo_app\\\\src\\\\todo.tsx\";\nimport React, { useState } from 'react';\nimport './App.css';\n\nconst DisplayInfo = ({\n  todoText,\n  index\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, todoText.text);\n};\n\nconst TodoInput = ({\n  addTodo\n}) => {\n  const [val, setVal] = useState('');\n\n  function submitForm(e) {\n    e.preventDefault();\n    if (!val) return;\n    addTodo(val);\n    setVal('');\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input\",\n    value: val,\n    onChange: e => setVal(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }));\n}; // function App() {\n//     const [todos,setTodos]= useState([{item: \"\",isCompleted:false}])\n//     const [input,setInput]= useState(\"\")\n//     const totalItems = todos.filter(getItems)\n//     // React.useEffect(() => {\n//     //   localStorage.setItem('myValueInLocalStorage', todos);\n//     // }, [todos]);\n//     let toggleStatus=(todoItem)=>{\n//       for(let i=0;i<todos.length;i++){\n//         if(todos[i][\"item\"]==todoItem[0]){\n//           console.log(!todoItem[1])\n//           todos[i][\"isCompleted\"]=!todoItem[1]\n//           setTodos([...todos])\n//         }\n//       }\n//     }\n\n\nexport const Todo = () => {\n  const [todos, setTodos] = useState([{\n    text: 'sal',\n    isCompleted: false\n  }]);\n\n  function addTodo(text) {\n    const newTodos = [...todos, {\n      text\n    }]; // setTodos(newTodos);\n\n    setTodos(newTodos);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, todos.map((todo, index) => /*#__PURE__*/React.createElement(DisplayInfo, {\n    index: index,\n    todoText: todo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(TodoInput, {\n    addTodo: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"sources":["c:/Desktop/my_projects/todo_app/src/todo.tsx"],"names":["React","useState","DisplayInfo","todoText","index","text","TodoInput","addTodo","val","setVal","submitForm","e","preventDefault","target","value","Todo","todos","setTodos","isCompleted","newTodos","map","todo"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;;AASA,MAAMC,WAA4B,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAAqB;AACtD,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKD,QAAQ,CAACE,IAFd,CADJ;AASH,CAVD;;AAeA,MAAMC,SAAyB,GAAE,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAC3C,QAAM,CAACC,GAAD,EAAKC,MAAL,IAAeR,QAAQ,CAAC,EAAD,CAA7B;;AACA,WAASS,UAAT,CAAoBC,CAApB,EAA6B;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAI,CAACJ,GAAL,EAAU;AACVD,IAAAA,OAAO,CAACC,GAAD,CAAP;AACAC,IAAAA,MAAM,CAAC,EAAD,CAAN;AAEH;;AACD,sBAEI;AAAM,IAAA,QAAQ,EAAEC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAC,OAA7B;AAAqC,IAAA,KAAK,EAAEF,GAA5C;AAAiD,IAAA,QAAQ,EAAEG,CAAC,IAAIF,MAAM,CAACE,CAAC,CAACE,MAAF,CAASC,KAAV,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ;AAMH,CAfD,C,CAwBA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;;;AAKA,OAAO,MAAMC,IAAc,GAAE,MAAI;AACjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAsC,CACpE;AACAI,IAAAA,IAAI,EAAC,KADL;AAEAa,IAAAA,WAAW,EAAC;AAFZ,GADoE,CAAtC,CAAlC;;AAOA,WAASX,OAAT,CAAiBF,IAAjB,EAA8B;AAC1B,UAAMc,QAAQ,GAAG,CAAC,GAAGH,KAAJ,EAAU;AAAEX,MAAAA;AAAF,KAAV,CAAjB,CAD0B,CAE1B;;AACAY,IAAAA,QAAQ,CAACE,QAAD,CAAR;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KAAK,CAACI,GAAN,CAAU,CAACC,IAAD,EAAMjB,KAAN,kBACP,oBAAC,WAAD;AAAc,IAAA,KAAK,EAAEA,KAArB;AAA4B,IAAA,QAAQ,EAAEiB,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,eAKI,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEd,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AAaC,CA3BM","sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css'\r\n\r\ninterface todos {\r\n    \r\n    todoText:any;\r\n    index:any\r\n\r\n}\r\n\r\nconst DisplayInfo: React.FC<todos> = ({todoText, index})=>{\r\n    return(\r\n        <div className=\"todo\">\r\n\r\n            {todoText.text}\r\n        </div>\r\n\r\n    )\r\n\r\n\r\n}\r\ninterface addT{\r\n    addTodo :(val:string)=>void;\r\n}\r\n\r\nconst TodoInput: React.FC<addT>= ({addTodo})=> {\r\n    const [val,setVal] = useState('');\r\n    function submitForm(e:Event) {\r\n        e.preventDefault();\r\n        if (!val) return;\r\n        addTodo(val);\r\n        setVal('');\r\n        \r\n    }\r\n    return(\r\n\r\n        <form onSubmit={submitForm}>\r\n            <input type=\"text\" className=\"input\" value={val} onChange={e => setVal(e.target.value)} />\r\n        </form>\r\n    )   \r\n}    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// function App() {\r\n//     const [todos,setTodos]= useState([{item: \"\",isCompleted:false}])\r\n//     const [input,setInput]= useState(\"\")\r\n  \r\n//     const totalItems = todos.filter(getItems)\r\n//     // React.useEffect(() => {\r\n//     //   localStorage.setItem('myValueInLocalStorage', todos);\r\n//     // }, [todos]);\r\n  \r\n//     let toggleStatus=(todoItem)=>{\r\n//       for(let i=0;i<todos.length;i++){\r\n//         if(todos[i][\"item\"]==todoItem[0]){\r\n//           console.log(!todoItem[1])\r\n//           todos[i][\"isCompleted\"]=!todoItem[1]\r\n  \r\n//           setTodos([...todos])\r\n//         }\r\n//       }\r\n  \r\n  \r\n//     }\r\n  \r\n\r\n\r\n\r\nexport const Todo: React.FC =()=>{\r\nconst [todos, setTodos] = useState<[{text:string;isCompleted:boolean}]>([\r\n    {\r\n    text:'sal',\r\n    isCompleted:false \r\n    },\r\n])\r\n\r\nfunction addTodo(text:string) {\r\n    const newTodos = [...todos,{ text }]\r\n    // setTodos(newTodos);\r\n    setTodos(newTodos)\r\n}\r\n\r\nreturn(\r\n    <div className='todo-list'>\r\n        {todos.map((todo,index)=>(\r\n            <DisplayInfo  index={index} todoText={todo} />\r\n            \r\n        ))}\r\n        <TodoInput addTodo={addTodo}/>\r\n    </div>\r\n        \r\n\r\n\r\n)\r\n\r\n}"]},"metadata":{},"sourceType":"module"}