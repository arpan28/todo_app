{"ast":null,"code":"var _jsxFileName = \"c:\\\\Desktop\\\\my_projects\\\\todo_app\\\\src\\\\todo.tsx\";\nimport React, { useState } from 'react';\nimport './App.css';\n\nconst DisplayInfo = ({\n  todoText,\n  index,\n  completeTodo\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo\",\n    style: {\n      textDecoration: todoText.isCompleted ? 'line-through' : ''\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, todoText.text, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => completeTodo(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, \"Mark complete\"));\n};\n\nconst TodoInput = ({\n  addTodo\n}) => {\n  const [val, setVal] = useState('');\n  console.log(val);\n\n  const submitForm = e => {\n    console.log(\"submitForm called\");\n    e.preventDefault();\n    if (!val) return;\n    addTodo(val);\n    console.log(val);\n    setVal('');\n  };\n\n  return (\n    /*#__PURE__*/\n    // <form>\n    React.createElement(\"form\", {\n      onSubmit: submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"add toDo...\",\n      className: \"input\",\n      value: val,\n      onChange: e => setVal(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }))\n  );\n}; // const Enumerate: React.FC<any> =({todos})=>{\n//     if (!todos) {\n//         return\n//       } \n//     else {\n//         {\n//             todos.map((todo:any,index:number)=>(\n//             <DisplayInfo  index={index} todoText={todo} />\n//         ))}\n//       }\n// }\n\n\nexport const Todo = () => {\n  const [todos, setTodos] = useState([{\n    text: '',\n    isCompleted: false\n  }]);\n\n  const addTodo = text => {\n    console.log(\"=======================>\");\n    const newTodos = [...todos, {\n      text: \"hhg\",\n      isCompleted: false\n    }];\n    setTodos(newTodos); // setTodos([...todos,{text:text,isCompleted:false }])\n  };\n\n  const completeTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isComplete = true;\n    setTodos(newTodos);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, todos.map((todo, index) => /*#__PURE__*/React.createElement(DisplayInfo, {\n    index: index,\n    todoText: todo,\n    completeTodo: completeTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(TodoInput, {\n    addTodo: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"sources":["c:/Desktop/my_projects/todo_app/src/todo.tsx"],"names":["React","useState","DisplayInfo","todoText","index","completeTodo","textDecoration","isCompleted","text","TodoInput","addTodo","val","setVal","console","log","submitForm","e","preventDefault","target","value","Todo","todos","setTodos","newTodos","isComplete","map","todo"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css'\r\n\r\ninterface todos {\r\n    \r\n    todoText:any;\r\n    index:number\r\n    completeTodo:(index:number)=>void;\r\n}\r\n\r\nconst DisplayInfo: React.FC<todos> = ({todoText, index,completeTodo})=>{\r\n    return(\r\n        <div className=\"todo\"  style={{textDecoration:todoText.isCompleted ? 'line-through':''}} >\r\n\r\n            \r\n            \r\n                {todoText.text}\r\n                <button onClick={()=>completeTodo(index)}>\r\n                    Mark complete\r\n                </button>\r\n\r\n           \r\n        </div>\r\n\r\n    )\r\n\r\n\r\n}\r\ninterface addT{\r\n    addTodo :(val:string)=>void;\r\n}\r\n\r\nconst TodoInput: React.FC<addT>= ({addTodo})=> {\r\n    const [val,setVal] = useState('');\r\n    console.log(val);\r\n    const submitForm = (e:any) => {\r\n        console.log(\"submitForm called\")\r\n        e.preventDefault();\r\n        if (!val) return;\r\n        addTodo(val);\r\n        console.log(val);\r\n        setVal('');\r\n        \r\n    }\r\n    return(\r\n        // <form>\r\n\r\n        <form onSubmit={submitForm}>\r\n            <input type=\"text\" placeholder=\"add toDo...\" className=\"input\" value={val} onChange={e => setVal(e.target.value)} />\r\n            {/* <button onClick={submitForm}>click</button> */}\r\n        </form>\r\n    )   \r\n}    \r\n\r\n\r\n// const Enumerate: React.FC<any> =({todos})=>{\r\n//     if (!todos) {\r\n//         return\r\n//       } \r\n//     else {\r\n//         {\r\n//             todos.map((todo:any,index:number)=>(\r\n//             <DisplayInfo  index={index} todoText={todo} />\r\n            \r\n//         ))}\r\n//       }\r\n// }\r\n\r\nexport const Todo: React.FC =()=>{\r\nconst [todos, setTodos] = useState<any>(\r\n    [{text:'',isCompleted:false}]\r\n)\r\n\r\nconst addTodo= (text:string)=> {\r\n    console.log(\"=======================>\")\r\n    const newTodos = [...todos,{ text:\"hhg\",isCompleted:false }]\r\n    setTodos(newTodos);\r\n    // setTodos([...todos,{text:text,isCompleted:false }])\r\n}\r\n\r\nconst completeTodo = (index:number) =>{\r\n    const newTodos = [...todos]\r\n    newTodos[index].isComplete = true;\r\n    setTodos(newTodos);\r\n}\r\n\r\nreturn(\r\n    <div className='todo-list'>\r\n        {todos.map((todo:any,index:number)=>(\r\n            <DisplayInfo  index={index} todoText={todo} completeTodo={completeTodo}/>\r\n            \r\n        ))}\r\n        {/* <Enumerate /> */}\r\n        <TodoInput addTodo={addTodo}/>\r\n    </div>\r\n        \r\n\r\n\r\n)\r\n\r\n}"]},"metadata":{},"sourceType":"module"}