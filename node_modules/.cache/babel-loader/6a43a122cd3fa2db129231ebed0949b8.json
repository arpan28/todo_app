{"ast":null,"code":"var _jsxFileName = \"c:\\\\Desktop\\\\my_projects\\\\todo_app\\\\src\\\\todo.tsx\";\nimport React, { useState } from 'react';\nimport './App.css';\n\n//displays the todo\nconst DisplayInfo = ({\n  todoText,\n  index,\n  completeTodo,\n  removeTodo\n}) => {\n  if (todoText.text == \"\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 16\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      onClick: () => completeTodo(index),\n      style: {\n        cursor: 'alias'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      style: {\n        textDecoration: todoText.isCompleted ? 'line-through' : ''\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }, \" \", todoText.text)), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => removeTodo(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, \"delete\"));\n  }\n};\n\n//creates the inpt field and updates the value\nconst TodoInput = ({\n  addTodo\n}) => {\n  const [val, setVal] = useState('');\n  console.log(val);\n\n  const submitForm = e => {\n    console.log(\"submitForm called\");\n    e.preventDefault();\n    if (!val) return;\n    addTodo(val);\n    console.log(val);\n    setVal('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"add toDo...\",\n    className: \"input\",\n    value: val,\n    onChange: e => setVal(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Add\"));\n}; //returns the tasks which are not completed\n\n\nfunction getIncompleteItems(value) {\n  return value.isCompleted == false && value.text != \"\";\n} //used to get all the todos  \n\n\nfunction getItems(value) {\n  return value.text != \"\";\n} //renders all the todos\n\n\nexport const Todo = () => {\n  let savedItems = localStorage.getItem('todos');\n  savedItems = JSON.parse(savedItems);\n  let dummy = [{\n    text: '',\n    isCompleted: false\n  }];\n  const [todos, setTodos] = useState(savedItems || dummy);\n  console.log(todos);\n\n  const addTodo = text => {\n    let newTodos = [...todos, {\n      text: text,\n      isCompleted: false\n    }];\n\n    if (newTodos[0].text == '') {\n      newTodos.splice(0, 1);\n    }\n\n    setTodos(newTodos);\n  };\n\n  const completeTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = !newTodos[index].isCompleted;\n    setTodos(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  const totalItems = todos.filter(getItems);\n  React.useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [JSON.stringify(todos)]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, \"Total Todos Remaining : \", todos.filter(getIncompleteItems).length, \" out of \", totalItems.length, todos.map((todo, index) => /*#__PURE__*/React.createElement(DisplayInfo, {\n    index: index,\n    todoText: todo,\n    completeTodo: completeTodo,\n    removeTodo: removeTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(TodoInput, {\n    addTodo: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"sources":["c:/Desktop/my_projects/todo_app/src/todo.tsx"],"names":["React","useState","DisplayInfo","todoText","index","completeTodo","removeTodo","text","cursor","textDecoration","isCompleted","TodoInput","addTodo","val","setVal","console","log","submitForm","e","preventDefault","target","value","getIncompleteItems","getItems","Todo","savedItems","localStorage","getItem","JSON","parse","dummy","todos","setTodos","newTodos","splice","totalItems","filter","useEffect","setItem","stringify","length","map","todo"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css'\r\n\r\n\r\ninterface todos {\r\n    \r\n    todoText:any;\r\n    index:any\r\n    completeTodo:(index:number)=>void;\r\n    removeTodo:(index:number)=>void;\r\n}\r\n\r\n\r\n//displays the todo\r\nconst DisplayInfo: React.FC<todos> = ({todoText, index,completeTodo,removeTodo})=>{\r\n    if (todoText.text == \"\"){ \r\n        return(<div></div>);\r\n    }\r\n    else{\r\n    return(\r\n\r\n        <div className=\"todo\" >\r\n                <ul onClick={()=>completeTodo(index)} style={{cursor:'alias'}}>\r\n                    <li style={{textDecoration:todoText.isCompleted ? 'line-through':''}}> {todoText.text}</li>\r\n                </ul>\r\n                <button onClick={()=>removeTodo(index)}>\r\n                    delete\r\n                </button>\r\n     \r\n        </div>\r\n    )\r\n    }\r\n}\r\ninterface addT{\r\n    addTodo :(val:string)=>void;\r\n}\r\n\r\n//creates the inpt field and updates the value\r\nconst TodoInput: React.FC<addT>= ({addTodo})=> {\r\n    const [val,setVal] = useState('');\r\n    console.log(val);\r\n    const submitForm = (e:any) => {\r\n        console.log(\"submitForm called\")\r\n        e.preventDefault();\r\n        if (!val) return;\r\n        addTodo(val);\r\n        console.log(val);\r\n        setVal('');\r\n        \r\n    }\r\n    return(\r\n        <form>\r\n            <input type=\"text\" placeholder=\"add toDo...\" className=\"input\" value={val} onChange={e => setVal(e.target.value)} />\r\n            <button onClick={submitForm}>Add</button>\r\n        </form>\r\n    )   \r\n}    \r\n\r\n\r\n//returns the tasks which are not completed\r\nfunction getIncompleteItems(value:any) {\r\n    return value.isCompleted == false && value.text !=\"\";\r\n  }\r\n \r\n//used to get all the todos  \r\nfunction getItems(value:any) {\r\n    return value.text !=\"\";\r\n  }\r\n\r\n  \r\n//renders all the todos\r\nexport const Todo: React.FC =()=>{\r\nlet savedItems:any = localStorage.getItem('todos');\r\nsavedItems = JSON.parse(savedItems);\r\nlet dummy:any =[{text:'',isCompleted:false}]\r\nconst [todos, setTodos] = useState<any>(savedItems||dummy)\r\nconsole.log(todos);\r\n\r\nconst addTodo= (text:string)=> {\r\n    \r\n    let newTodos = [...todos,{ text:text,isCompleted:false }]\r\n    if (newTodos[0].text ==''){\r\n        newTodos.splice(0,1);\r\n        \r\n    }\r\n    setTodos(newTodos);\r\n    \r\n}\r\n\r\n\r\nconst completeTodo = (index:number) =>{\r\n    const newTodos = [...todos]\r\n    newTodos[index].isCompleted = !newTodos[index].isCompleted;\r\n    setTodos(newTodos);\r\n}\r\n\r\nconst removeTodo = (index:number)=>{\r\n    const newTodos = [...todos]\r\n    newTodos.splice(index,1)\r\n    setTodos(newTodos);\r\n}\r\nconst totalItems = todos.filter(getItems)\r\nReact.useEffect(() => {\r\n    localStorage.setItem('todos', JSON.stringify(todos));\r\n  }, [JSON.stringify(todos)]);\r\n\r\nreturn(\r\n    <div className='todo-list'>\r\n        Total Todos Remaining : {todos.filter(getIncompleteItems).length} out of {totalItems.length}\r\n        {todos.map((todo:any,index:number)=>(\r\n            <DisplayInfo  index={index} todoText={todo} completeTodo={completeTodo} removeTodo={removeTodo}/>\r\n            \r\n        ))}\r\n        \r\n        <TodoInput addTodo={addTodo}/>\r\n    </div>\r\n        \r\n)\r\n\r\n}"]},"metadata":{},"sourceType":"module"}