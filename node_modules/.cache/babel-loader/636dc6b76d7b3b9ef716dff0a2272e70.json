{"ast":null,"code":"import _toConsumableArray from\"c:\\\\Desktop\\\\my_projects\\\\todo_app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"c:\\\\Desktop\\\\my_projects\\\\todo_app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'./App.css';//displays the todo\nvar DisplayInfo=function DisplayInfo(_ref){var todoText=_ref.todoText,index=_ref.index,completeTodo=_ref.completeTodo,removeTodo=_ref.removeTodo;if(todoText.text==\"\"){return/*#__PURE__*/React.createElement(\"div\",null);}else{return/*#__PURE__*/React.createElement(\"div\",{className:\"todo\"},/*#__PURE__*/React.createElement(\"ul\",{onClick:function onClick(){return completeTodo(index);},style:{cursor:'alias'}},/*#__PURE__*/React.createElement(\"li\",{style:{textDecoration:todoText.isCompleted?'line-through':''}},\" \",todoText.text)),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return removeTodo(index);}},\"delete\"));}};//creates the inpt field and updates the value\nvar TodoInput=function TodoInput(_ref2){var addTodo=_ref2.addTodo;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),val=_useState2[0],setVal=_useState2[1];console.log(val);var submitForm=function submitForm(e){console.log(\"submitForm called\");e.preventDefault();if(!val)return;addTodo(val);console.log(val);setVal('');};return/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"add toDo...\",className:\"input\",value:val,onChange:function onChange(e){return setVal(e.target.value);}}),/*#__PURE__*/React.createElement(\"button\",{onClick:submitForm},\"Add\"));};//returns the tasks which are not completed\nfunction getIncompleteItems(value){return value.isCompleted==false&&value.text!=\"\";}//used to get all the todos  \nfunction getItems(value){return value.text!=\"\";}//renders all the todos\nexport var Todo=function Todo(){var savedItems=localStorage.getItem('todos');savedItems=JSON.parse(savedItems);var dummy=[{text:'',isCompleted:false}];var _useState3=useState(savedItems||dummy),_useState4=_slicedToArray(_useState3,2),todos=_useState4[0],setTodos=_useState4[1];console.log(todos);var addTodo=function addTodo(text){var newTodos=[].concat(_toConsumableArray(todos),[{text:text,isCompleted:false}]);if(newTodos[0].text==''){newTodos.splice(0,1);}setTodos(newTodos);};var completeTodo=function completeTodo(index){var newTodos=_toConsumableArray(todos);newTodos[index].isCompleted=!newTodos[index].isCompleted;setTodos(newTodos);};var removeTodo=function removeTodo(index){var newTodos=_toConsumableArray(todos);newTodos.splice(index,1);setTodos(newTodos);};var totalItems=todos.filter(getItems);React.useEffect(function(){localStorage.setItem('todos',JSON.stringify(todos));},[JSON.stringify(todos)]);return/*#__PURE__*/React.createElement(\"div\",{className:\"todo-list\"},\"Total Todos Remaining : \",todos.filter(getIncompleteItems).length,\" out of \",totalItems.length,todos.map(function(todo,index){return/*#__PURE__*/React.createElement(DisplayInfo,{index:index,todoText:todo,completeTodo:completeTodo,removeTodo:removeTodo});}),/*#__PURE__*/React.createElement(TodoInput,{addTodo:addTodo}));};","map":{"version":3,"sources":["c:/Desktop/my_projects/todo_app/src/todo.tsx"],"names":["React","useState","DisplayInfo","todoText","index","completeTodo","removeTodo","text","cursor","textDecoration","isCompleted","TodoInput","addTodo","val","setVal","console","log","submitForm","e","preventDefault","target","value","getIncompleteItems","getItems","Todo","savedItems","localStorage","getItem","JSON","parse","dummy","todos","setTodos","newTodos","splice","totalItems","filter","useEffect","setItem","stringify","length","map","todo"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css'\r\n\r\n\r\ninterface todos {\r\n    \r\n    todoText:any;\r\n    index:any\r\n    completeTodo:(index:number)=>void;\r\n    removeTodo:(index:number)=>void;\r\n}\r\n\r\n\r\n//displays the todo\r\nconst DisplayInfo: React.FC<todos> = ({todoText, index,completeTodo,removeTodo})=>{\r\n    if (todoText.text == \"\"){ \r\n        return(<div></div>);\r\n    }\r\n    else{\r\n    return(\r\n\r\n        <div className=\"todo\" >\r\n                <ul onClick={()=>completeTodo(index)} style={{cursor:'alias'}}>\r\n                    <li style={{textDecoration:todoText.isCompleted ? 'line-through':''}}> {todoText.text}</li>\r\n                </ul>\r\n                <button onClick={()=>removeTodo(index)}>\r\n                    delete\r\n                </button>\r\n     \r\n        </div>\r\n    )\r\n    }\r\n}\r\ninterface addT{\r\n    addTodo :(val:string)=>void;\r\n}\r\n\r\n//creates the inpt field and updates the value\r\nconst TodoInput: React.FC<addT>= ({addTodo})=> {\r\n    const [val,setVal] = useState('');\r\n    console.log(val);\r\n    const submitForm = (e:any) => {\r\n        console.log(\"submitForm called\")\r\n        e.preventDefault();\r\n        if (!val) return;\r\n        addTodo(val);\r\n        console.log(val);\r\n        setVal('');\r\n        \r\n    }\r\n    return(\r\n        <form>\r\n            <input type=\"text\" placeholder=\"add toDo...\" className=\"input\" value={val} onChange={e => setVal(e.target.value)} />\r\n            <button onClick={submitForm}>Add</button>\r\n        </form>\r\n    )   \r\n}    \r\n\r\n\r\n//returns the tasks which are not completed\r\nfunction getIncompleteItems(value:any) {\r\n    return value.isCompleted == false && value.text !=\"\";\r\n  }\r\n \r\n//used to get all the todos  \r\nfunction getItems(value:any) {\r\n    return value.text !=\"\";\r\n  }\r\n\r\n  \r\n//renders all the todos\r\nexport const Todo: React.FC =()=>{\r\nlet savedItems:any = localStorage.getItem('todos');\r\nsavedItems = JSON.parse(savedItems);\r\nlet dummy:any =[{text:'',isCompleted:false}]\r\nconst [todos, setTodos] = useState<any>(savedItems||dummy)\r\nconsole.log(todos);\r\n\r\nconst addTodo= (text:string)=> {\r\n    \r\n    let newTodos = [...todos,{ text:text,isCompleted:false }]\r\n    if (newTodos[0].text ==''){\r\n        newTodos.splice(0,1);\r\n        \r\n    }\r\n    setTodos(newTodos);\r\n    \r\n}\r\n\r\n\r\nconst completeTodo = (index:number) =>{\r\n    const newTodos = [...todos]\r\n    newTodos[index].isCompleted = !newTodos[index].isCompleted;\r\n    setTodos(newTodos);\r\n}\r\n\r\nconst removeTodo = (index:number)=>{\r\n    const newTodos = [...todos]\r\n    newTodos.splice(index,1)\r\n    setTodos(newTodos);\r\n}\r\nconst totalItems = todos.filter(getItems)\r\nReact.useEffect(() => {\r\n    localStorage.setItem('todos', JSON.stringify(todos));\r\n  }, [JSON.stringify(todos)]);\r\n\r\nreturn(\r\n    <div className='todo-list'>\r\n        Total Todos Remaining : {todos.filter(getIncompleteItems).length} out of {totalItems.length}\r\n        {todos.map((todo:any,index:number)=>(\r\n            <DisplayInfo  index={index} todoText={todo} completeTodo={completeTodo} removeTodo={removeTodo}/>\r\n            \r\n        ))}\r\n        \r\n        <TodoInput addTodo={addTodo}/>\r\n    </div>\r\n        \r\n)\r\n\r\n}"]},"metadata":{},"sourceType":"module"}