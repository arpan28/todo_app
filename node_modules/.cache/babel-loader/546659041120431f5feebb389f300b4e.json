{"ast":null,"code":"var _jsxFileName = \"c:\\\\Desktop\\\\my_projects\\\\todo_app\\\\src\\\\todo.tsx\";\nimport React, { useState } from 'react';\nimport './App.css';\n\nconst DisplayInfo = ({\n  todoText,\n  index\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, todoText.text);\n};\n\nconst TodoInput = ({\n  addTodo\n}) => {\n  const [val, setVal] = useState('');\n  console.log(val);\n\n  const submitForm = () => {\n    console.log(\"submitForm called\");\n    e.preventDefault();\n    if (!val) return;\n    addTodo(val);\n    console.log(val);\n    setVal('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input\",\n    value: val,\n    onChange: e => setVal(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"click\"));\n}; // const handleSubmit=(e,todos,setTodos,input,setInput)=>{\n//     e.preventDefault()\n//     setTodos([...todos,{item: input,isCompleted:false}])\n//     setInput(\"\")\n//   }\n\n\nexport const Todo = () => {\n  const [todos, setTodos] = useState([{\n    text: '',\n    isCompleted: false\n  }]);\n\n  const addTodo = text => {\n    console.log(\"=======================>\"); // const newTodos = [...todos,{ text:\"hhg\",isCompleted:false }]\n    // setTodos(newTodos);\n\n    setTodos([{ ...todos,\n      text: text,\n      isCompleted: false\n    }]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, todos.map((todo, index) => /*#__PURE__*/React.createElement(DisplayInfo, {\n    index: index,\n    todoText: todo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(TodoInput, {\n    addTodo: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"sources":["c:/Desktop/my_projects/todo_app/src/todo.tsx"],"names":["React","useState","DisplayInfo","todoText","index","text","TodoInput","addTodo","val","setVal","console","log","submitForm","e","preventDefault","target","value","Todo","todos","setTodos","isCompleted","map","todo"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;;AASA,MAAMC,WAA4B,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAAqB;AACtD,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKD,QAAQ,CAACE,IAFd,CADJ;AASH,CAVD;;AAeA,MAAMC,SAAyB,GAAE,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAC3C,QAAM,CAACC,GAAD,EAAKC,MAAL,IAAeR,QAAQ,CAAC,EAAD,CAA7B;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;;AACA,QAAMI,UAAU,GAAG,MAAM;AACrBF,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAE,IAAAA,CAAC,CAACC,cAAF;AACA,QAAI,CAACN,GAAL,EAAU;AACVD,IAAAA,OAAO,CAACC,GAAD,CAAP;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAC,IAAAA,MAAM,CAAC,EAAD,CAAN;AAEH,GARD;;AASA,sBACI;AAAM,IAAA,QAAQ,EAAGI,CAAD,IAAKD,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAC,OAA7B;AAAqC,IAAA,KAAK,EAAEJ,GAA5C;AAAiD,IAAA,QAAQ,EAAEK,CAAC,IAAIJ,MAAM,CAACI,CAAC,CAACE,MAAF,CAASC,KAAV,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII;AAAQ,IAAA,OAAO,EAAEJ,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ,CADJ;AAQH,CApBD,C,CA8BA;AACA;AACA;AACA;AACA;;;AAMA,OAAO,MAAMK,IAAc,GAAE,MAAI;AACjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAsC,CACpE;AACAI,IAAAA,IAAI,EAAC,EADL;AAEAe,IAAAA,WAAW,EAAC;AAFZ,GADoE,CAAtC,CAAlC;;AAOA,QAAMb,OAAO,GAAGF,IAAD,IAAgB;AAC3BK,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAD2B,CAE3B;AACA;;AACAQ,IAAAA,QAAQ,CAAC,CAAC,EAAC,GAAGD,KAAJ;AAAWb,MAAAA,IAAI,EAACA,IAAhB;AAAqBe,MAAAA,WAAW,EAAC;AAAjC,KAAD,CAAD,CAAR;AACH,GALD;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACG,GAAN,CAAU,CAACC,IAAD,EAAMlB,KAAN,kBACP,oBAAC,WAAD;AAAc,IAAA,KAAK,EAAEA,KAArB;AAA4B,IAAA,QAAQ,EAAEkB,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,eAKI,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEf,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AAaC,CA5BM","sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css'\r\n\r\ninterface todos {\r\n    \r\n    todoText:any;\r\n    index:any\r\n\r\n}\r\n\r\nconst DisplayInfo: React.FC<todos> = ({todoText, index})=>{\r\n    return(\r\n        <div className=\"todo\">\r\n\r\n            {todoText.text}\r\n        </div>\r\n\r\n    )\r\n\r\n\r\n}\r\ninterface addT{\r\n    addTodo :(val:string)=>void;\r\n}\r\n\r\nconst TodoInput: React.FC<addT>= ({addTodo})=> {\r\n    const [val,setVal] = useState('');\r\n    console.log(val);\r\n    const submitForm = () => {\r\n        console.log(\"submitForm called\")\r\n        e.preventDefault();\r\n        if (!val) return;\r\n        addTodo(val);\r\n        console.log(val);\r\n        setVal('');\r\n      \r\n    }\r\n    return(\r\n        <form onSubmit={(e)=>submitForm}>\r\n\r\n        {/* <form onSubmit={submitForm}> */}\r\n            <input type=\"text\" className=\"input\" value={val} onChange={e => setVal(e.target.value)} />\r\n            <button onClick={submitForm}>click</button>\r\n        </form>\r\n    )   \r\n}    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const handleSubmit=(e,todos,setTodos,input,setInput)=>{\r\n//     e.preventDefault()\r\n//     setTodos([...todos,{item: input,isCompleted:false}])\r\n//     setInput(\"\")\r\n//   }\r\n  \r\n  \r\n\r\n\r\n\r\nexport const Todo: React.FC =()=>{\r\nconst [todos, setTodos] = useState<[{text:string;isCompleted:boolean}]>([\r\n    {\r\n    text:'',\r\n    isCompleted:false \r\n    },\r\n])\r\n\r\nconst addTodo= (text:string)=> {\r\n    console.log(\"=======================>\")\r\n    // const newTodos = [...todos,{ text:\"hhg\",isCompleted:false }]\r\n    // setTodos(newTodos);\r\n    setTodos([{...todos, text:text,isCompleted:false }])\r\n}\r\n\r\nreturn(\r\n    <div className='todo-list'>\r\n        {todos.map((todo,index)=>(\r\n            <DisplayInfo  index={index} todoText={todo} />\r\n            \r\n        ))}\r\n        <TodoInput addTodo={addTodo}/>\r\n    </div>\r\n        \r\n\r\n\r\n)\r\n\r\n}"]},"metadata":{},"sourceType":"module"}